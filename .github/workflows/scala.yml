name: Build && Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  HYGRAPH_ENDPOINT: ${{ secrets.HYGRAPH_ENDPOINT }}
  SENTRY_DNS: ${{ secrets.SENTRY_DNS }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  SUB_SECRET: ${{ secrets.SUB_SECRET }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          known_hosts: unnecessary
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa_og_events
          config: |
            Host low
              User oto
              Hostname oto.srv4all.net
              IdentityFile ~/.ssh/id_rsa_og_events
              StrictHostKeyChecking no
              ConnectTimeout 60
              ConnectionAttempts 2
          if_key_exists: fail

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'sbt'

      - name: Run tests
        run: sbt "test"

      - name: Setup Sentry CLI
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: mathieu-bour/setup-sentry-cli@v1
        with:
          version: latest
          token: ${{ SECRETS.SENTRY_AUTH_TOKEN }}
          organization: ogrodje-ok
          project: ogrodje-events

      - name: Run tests and publish
        if: ${{ github.ref == 'refs/heads/master' }}
        run: sbt "docker:publish"

      - name: Deploy to production
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          export VERSION=$(sentry-cli releases propose-version)
          sentry-cli releases new -p ogrodje-events $VERSION && \
            sentry-cli releases set-commits --auto $VERSION
          
          export DOCKER_HOST="ssh://low"
          ./bin/og-prod.sh pull && \
            ./bin/og-prod.sh up -d --remove-orphans

          sentry-cli releases finalize $VERSION && \
            sentry-cli releases deploys $VERSION new -e production
